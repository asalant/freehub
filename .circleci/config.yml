version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    parallelism: 3 # run three instances of this job in parallel
    docker: # run the steps with Docker
      - image: ruby:1.9.3 # ...with this image as the primary container; this is where all `steps` will run
        environment: # environment variables for primary container
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
      - image: postgres:9.4.11 # database image
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory

      # Install compatible bundler
      - run:
          name: Install bundler
          command: gem install bundler -v 1.15.4

      # Restore bundle cache
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      - restore_cache:
          keys:
            - freehub-{{ checksum "Gemfile.lock" }}
            - freehub-

      - run: # Install Ruby dependencies
          name: Bundle Install
          command: bundle install --jobs=4 --retry=3 --path vendor/bundle

      # Store bundle cache for Ruby dependencies
      - save_cache:
          key: freehub-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Our primary container isn't Postgres so wait for it
      - run:
          name: Install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1

      - run:
          name: Waiting for Postgres to be ready
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: rake db:create db:schema:load

      - run:
          name: Run tests
          command: rake test

      # Save test results for timing analysis
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test_results
